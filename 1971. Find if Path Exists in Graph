class Solution {
public:

    int dfs(int node,vector<int>adj[],vector<int>&vis,int destination){
        vis[node]=1;
        for(auto it:adj[node]){
            if(it==destination) return 1;
            else if(!vis[it]){
                if(dfs(it,adj,vis,destination)) return 1;
            }
        }
        return 0;
    }

    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
       
        //return true;
        if(n==1 and (source==0 and destination==0)) return true;
        vector<int>adj[n+1];
        for (int i = 0; i < edges.size(); i++) {
            int u = edges[i][0];
            int v = edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }

        vector<int>vis(n+1,0);
        if(dfs(source,adj,vis,destination)) return  true;
        return false;
        
    }
};
